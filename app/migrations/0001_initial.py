# Generated by Django 5.0.3 on 2024-03-21 05:16

import app.utils.utils
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.CharField(db_index=True, default=app.utils.utils.get_char_uuid, editable=False, max_length=100, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('url', models.URLField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GptReview',
            fields=[
                ('id', models.CharField(db_index=True, default=app.utils.utils.get_char_uuid, editable=False, max_length=100, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('score', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.CharField(db_index=True, default=app.utils.utils.get_char_uuid, editable=False, max_length=100, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('domain', models.CharField(blank=True, choices=[('frontend', 'frontend'), ('backend', 'backend'), ('human-resource', 'human-resource'), ('devops', 'devops'), ('project-manager', 'project-manager')], max_length=255, null=True)),
                ('otp', models.CharField(blank=True, max_length=10, null=True)),
                ('otp_sent_date', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ManagerFeedback',
            fields=[
                ('id', models.CharField(db_index=True, default=app.utils.utils.get_char_uuid, editable=False, max_length=100, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('score', models.PositiveIntegerField(blank=True, null=True)),
                ('gpt_review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.gptreview')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.CharField(db_index=True, default=app.utils.utils.get_char_uuid, editable=False, max_length=100, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('question', models.CharField(max_length=255)),
                ('helping_text', models.TextField(blank=True, null=True)),
                ('level', models.CharField(blank=True, choices=[('beginner', 'beginner'), ('intermediate', 'intermediate'), ('advance', 'advance')], max_length=255, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='course_questions', to='app.course')),
                ('sub_topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_topic_questions', to='app.course')),
                ('topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='topic_questions', to='app.course')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='gptreview',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.question'),
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.CharField(db_index=True, default=app.utils.utils.get_char_uuid, editable=False, max_length=100, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics', to='app.course')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SubTopic',
            fields=[
                ('id', models.CharField(db_index=True, default=app.utils.utils.get_char_uuid, editable=False, max_length=100, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_topics', to='app.topic')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserCourseAssignment',
            fields=[
                ('id', models.CharField(db_index=True, default=app.utils.utils.get_char_uuid, editable=False, max_length=100, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('in-progess', 'in-progess'), ('completed', 'completed')], default='in-progess', max_length=255)),
                ('deadline', models.DateTimeField(blank=True, null=True)),
                ('assigned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned', to=settings.AUTH_USER_MODEL)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='app.userprofile')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('user', 'course')},
            },
        ),
        migrations.AddField(
            model_name='gptreview',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.userprofile'),
        ),
        migrations.CreateModel(
            name='UserAnswer',
            fields=[
                ('id', models.CharField(db_index=True, default=app.utils.utils.get_char_uuid, editable=False, max_length=100, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('answer', models.TextField(blank=True, null=True)),
                ('is_reviewed_by_gpt', models.BooleanField(default=False)),
                ('is_reviewed_by_manager', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('in-progess', 'in-progess'), ('completed', 'completed')], default='in-progess', max_length=255)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.question')),
                ('user_course_assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.usercourseassignment')),
            ],
            options={
                'unique_together': {('user_course_assignment', 'question')},
            },
        ),
    ]
